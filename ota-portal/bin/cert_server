#!/usr/bin/env node
/**
 * Server to give unregistered nodes the public RSA key.
 */

const fs = require("fs");
const tcp = require("../utils/tcp");

const pubKeyFile = Buffer.from(fs.readFileSync(process.env.RSA_CERT_PATH, {encoding: "utf-8"}));
const pubKey = new Uint8Array(pubKeyFile.byteLength);
pubKeyFile.copy(pubKey);

// validation of key request.
const certReqMagic = "3f4d128c"; // 0x8c124d3f (int32LE)

const server = tcp.startServer(process.env.CERT_SERVER_PORT, undefined, (sock, data) => {
    var buf = Buffer.from(data);
    console.log("Received", buf.byteLength, "bytes");

    // verify magic number
    if (!(buf && buf.byteLength == 4 && buf.toString("hex") == certReqMagic)) {
        console.log("Invalid magic:", buf.toString("hex"));
        sock.end();
        return;
    }

    // send certificate file
    sock.write(pubKey, "utf-8");
    console.log("Sent", pubKey.length, "bytes");
});
